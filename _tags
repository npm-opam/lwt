# -*- conf -*-
not <src/ssl/*>: safe_string

# Syntax extension
<syntax/*.ml>: syntax(camlp4o)

# Stubs
<src/unix/*>: use_C_libev, use_C_pthread
<src/glib/*>: use_C_glib
<**/*.c>: use_lwt_headers
<**/*.h>: use_lwt_headers

# Ppx tests
<tests/ppx/*>: ppx_lwt

# Examples
<examples/**/*.ml>: syntax(camlp4o), package(camlp4), pa_lwt_options, pa_lwt, pa_lwt_log

# OASIS_START
# DO NOT EDIT (digest: c021494f3c14777d9e4f05e049ef0533)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library lwt
"src/core/lwt.cmxs": use_lwt
<src/core/*.ml{,i,y}>: package(bytes)
# Library lwt-log
"src/logger/lwt-log.cmxs": use_lwt-log
<src/logger/*.ml{,i,y}>: package(bytes)
<src/logger/*.ml{,i,y}>: use_lwt
# Library lwt-unix
"src/unix/lwt-unix.cmxs": use_lwt-unix
<src/unix/lwt-unix.{cma,cmxa}>: oasis_library_lwt_unix_cclib
"src/unix/liblwt-unix_stubs.lib": oasis_library_lwt_unix_cclib
"src/unix/dlllwt-unix_stubs.dll": oasis_library_lwt_unix_cclib
"src/unix/liblwt-unix_stubs.a": oasis_library_lwt_unix_cclib
"src/unix/dlllwt-unix_stubs.so": oasis_library_lwt_unix_cclib
<src/unix/lwt-unix.{cma,cmxa}>: use_liblwt-unix_stubs
<src/unix/*.ml{,i,y}>: package(bigarray)
<src/unix/*.ml{,i,y}>: package(bytes)
<src/unix/*.ml{,i,y}>: package(unix)
<src/unix/*.ml{,i,y}>: use_lwt
<src/unix/*.ml{,i,y}>: use_lwt-log
"src/unix/lwt_unix_stubs.c": package(bigarray)
"src/unix/lwt_unix_stubs.c": package(bytes)
"src/unix/lwt_unix_stubs.c": package(unix)
"src/unix/lwt_unix_stubs.c": use_lwt
"src/unix/lwt_unix_stubs.c": use_lwt-log
"src/unix/lwt_libev_stubs.c": package(bigarray)
"src/unix/lwt_libev_stubs.c": package(bytes)
"src/unix/lwt_libev_stubs.c": package(unix)
"src/unix/lwt_libev_stubs.c": use_lwt
"src/unix/lwt_libev_stubs.c": use_lwt-log
"src/unix/lwt_process_stubs.c": package(bigarray)
"src/unix/lwt_process_stubs.c": package(bytes)
"src/unix/lwt_process_stubs.c": package(unix)
"src/unix/lwt_process_stubs.c": use_lwt
"src/unix/lwt_process_stubs.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_access.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_access.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_access.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_access.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_access.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_chdir.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_chdir.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_chdir.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_chdir.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_chdir.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_chmod.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_chmod.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_chmod.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_chmod.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_chmod.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_chown.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_chown.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_chown.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_chown.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_chown.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_chroot.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_chroot.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_chroot.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_chroot.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_chroot.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_close.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_close.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_close.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_close.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_close.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_fchmod.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_fchmod.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_fchmod.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_fchmod.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_fchmod.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_fchown.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_fchown.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_fchown.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_fchown.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_fchown.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_fdatasync.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_fdatasync.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_fdatasync.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_fdatasync.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_fdatasync.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_fsync.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_fsync.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_fsync.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_fsync.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_fsync.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_ftruncate.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_ftruncate.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_ftruncate.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_ftruncate.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_ftruncate.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_link.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_link.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_link.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_link.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_link.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_lseek.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_lseek.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_lseek.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_lseek.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_lseek.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_mkdir.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_mkdir.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_mkdir.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_mkdir.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_mkdir.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_mkfifo.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_mkfifo.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_mkfifo.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_mkfifo.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_mkfifo.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_rename.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_rename.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_rename.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_rename.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_rename.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_rmdir.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_rmdir.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_rmdir.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_rmdir.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_rmdir.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_symlink.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_symlink.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_symlink.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_symlink.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_symlink.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_tcdrain.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_tcdrain.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_tcdrain.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_tcdrain.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_tcdrain.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_tcflow.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_tcflow.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_tcflow.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_tcflow.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_tcflow.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_tcflush.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_tcflush.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_tcflush.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_tcflush.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_tcflush.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_tcsendbreak.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_tcsendbreak.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_tcsendbreak.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_tcsendbreak.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_tcsendbreak.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_truncate.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_truncate.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_truncate.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_truncate.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_truncate.c": use_lwt-log
"src/unix/jobs-unix/lwt_unix_job_unlink.c": package(bigarray)
"src/unix/jobs-unix/lwt_unix_job_unlink.c": package(bytes)
"src/unix/jobs-unix/lwt_unix_job_unlink.c": package(unix)
"src/unix/jobs-unix/lwt_unix_job_unlink.c": use_lwt
"src/unix/jobs-unix/lwt_unix_job_unlink.c": use_lwt-log
# Library lwt-simple-top
"src/simple_top/lwt-simple-top.cmxs": use_lwt-simple-top
<src/simple_top/*.ml{,i,y}>: package(bigarray)
<src/simple_top/*.ml{,i,y}>: package(bytes)
<src/simple_top/*.ml{,i,y}>: package(compiler-libs.common)
<src/simple_top/*.ml{,i,y}>: package(unix)
<src/simple_top/*.ml{,i,y}>: use_lwt
<src/simple_top/*.ml{,i,y}>: use_lwt-log
<src/simple_top/*.ml{,i,y}>: use_lwt-unix
# Library lwt-react
"src/react/lwt-react.cmxs": use_lwt-react
<src/react/*.ml{,i,y}>: package(bytes)
<src/react/*.ml{,i,y}>: package(react)
<src/react/*.ml{,i,y}>: use_lwt
# Library lwt-preemptive
"src/preemptive/lwt-preemptive.cmxs": use_lwt-preemptive
<src/preemptive/*.ml{,i,y}>: package(bigarray)
<src/preemptive/*.ml{,i,y}>: package(bytes)
<src/preemptive/*.ml{,i,y}>: package(threads)
<src/preemptive/*.ml{,i,y}>: package(unix)
<src/preemptive/*.ml{,i,y}>: use_lwt
<src/preemptive/*.ml{,i,y}>: use_lwt-log
<src/preemptive/*.ml{,i,y}>: use_lwt-unix
# Library lwt-glib
"src/glib/lwt-glib.cmxs": use_lwt-glib
<src/glib/lwt-glib.{cma,cmxa}>: use_liblwt-glib_stubs
<src/glib/*.ml{,i,y}>: package(bigarray)
<src/glib/*.ml{,i,y}>: package(bytes)
<src/glib/*.ml{,i,y}>: package(unix)
<src/glib/*.ml{,i,y}>: use_lwt
<src/glib/*.ml{,i,y}>: use_lwt-log
<src/glib/*.ml{,i,y}>: use_lwt-unix
"src/glib/lwt_glib_stubs.c": package(bigarray)
"src/glib/lwt_glib_stubs.c": package(bytes)
"src/glib/lwt_glib_stubs.c": package(unix)
"src/glib/lwt_glib_stubs.c": use_lwt
"src/glib/lwt_glib_stubs.c": use_lwt-log
"src/glib/lwt_glib_stubs.c": use_lwt-unix
# Library lwt-ssl
"src/ssl/lwt-ssl.cmxs": use_lwt-ssl
<src/ssl/*.ml{,i,y}>: package(bigarray)
<src/ssl/*.ml{,i,y}>: package(bytes)
<src/ssl/*.ml{,i,y}>: package(ssl)
<src/ssl/*.ml{,i,y}>: package(unix)
<src/ssl/*.ml{,i,y}>: use_lwt
<src/ssl/*.ml{,i,y}>: use_lwt-log
<src/ssl/*.ml{,i,y}>: use_lwt-unix
# Library lwt-syntax
"syntax/lwt-syntax.cmxs": use_lwt-syntax
<syntax/*.ml{,i,y}>: package(camlp4.extend)
# Library lwt-syntax-options
"syntax/lwt-syntax-options.cmxs": use_lwt-syntax-options
# Library lwt-syntax-log
"syntax/lwt-syntax-log.cmxs": use_lwt-syntax-log
<syntax/*.ml{,i,y}>: package(camlp4)
<syntax/*.ml{,i,y}>: package(camlp4.quotations.o)
# Library ppx
"ppx/ppx.cmxs": use_ppx
# Executable ppx_lwt
<ppx/ppx_lwt_ex.{native,byte}>: package(compiler-libs.common)
<ppx/ppx_lwt_ex.{native,byte}>: package(ppx_tools.metaquot)
<ppx/*.ml{,i,y}>: package(compiler-libs.common)
<ppx/*.ml{,i,y}>: package(ppx_tools.metaquot)
# Executable logging
<examples/unix/logging.{native,byte}>: package(bigarray)
<examples/unix/logging.{native,byte}>: package(bytes)
<examples/unix/logging.{native,byte}>: package(camlp4)
<examples/unix/logging.{native,byte}>: package(camlp4.extend)
<examples/unix/logging.{native,byte}>: package(camlp4.quotations.o)
<examples/unix/logging.{native,byte}>: package(unix)
<examples/unix/logging.{native,byte}>: use_lwt
<examples/unix/logging.{native,byte}>: use_lwt-log
<examples/unix/logging.{native,byte}>: use_lwt-syntax
<examples/unix/logging.{native,byte}>: use_lwt-unix
# Executable relay
<examples/unix/relay.{native,byte}>: package(bigarray)
<examples/unix/relay.{native,byte}>: package(bytes)
<examples/unix/relay.{native,byte}>: package(camlp4)
<examples/unix/relay.{native,byte}>: package(camlp4.extend)
<examples/unix/relay.{native,byte}>: package(camlp4.quotations.o)
<examples/unix/relay.{native,byte}>: package(unix)
<examples/unix/relay.{native,byte}>: use_lwt
<examples/unix/relay.{native,byte}>: use_lwt-log
<examples/unix/relay.{native,byte}>: use_lwt-syntax
<examples/unix/relay.{native,byte}>: use_lwt-unix
# Executable parallelize
<examples/unix/parallelize.{native,byte}>: package(bigarray)
<examples/unix/parallelize.{native,byte}>: package(bytes)
<examples/unix/parallelize.{native,byte}>: package(camlp4)
<examples/unix/parallelize.{native,byte}>: package(camlp4.extend)
<examples/unix/parallelize.{native,byte}>: package(camlp4.quotations.o)
<examples/unix/parallelize.{native,byte}>: package(unix)
<examples/unix/parallelize.{native,byte}>: use_lwt
<examples/unix/parallelize.{native,byte}>: use_lwt-log
<examples/unix/parallelize.{native,byte}>: use_lwt-syntax
<examples/unix/parallelize.{native,byte}>: use_lwt-unix
<examples/unix/*.ml{,i,y}>: package(bigarray)
<examples/unix/*.ml{,i,y}>: package(bytes)
<examples/unix/*.ml{,i,y}>: package(camlp4)
<examples/unix/*.ml{,i,y}>: package(camlp4.extend)
<examples/unix/*.ml{,i,y}>: package(camlp4.quotations.o)
<examples/unix/*.ml{,i,y}>: package(unix)
<examples/unix/*.ml{,i,y}>: use_lwt
<examples/unix/*.ml{,i,y}>: use_lwt-log
<examples/unix/*.ml{,i,y}>: use_lwt-syntax
<examples/unix/*.ml{,i,y}>: use_lwt-unix
# Library test
"tests/test.cmxs": use_test
<tests/*.ml{,i,y}>: package(bigarray)
<tests/*.ml{,i,y}>: package(bytes)
<tests/*.ml{,i,y}>: package(unix)
<tests/*.ml{,i,y}>: use_lwt
<tests/*.ml{,i,y}>: use_lwt-log
<tests/*.ml{,i,y}>: use_lwt-unix
# Executable test_core
<tests/core/main.{native,byte}>: package(bigarray)
<tests/core/main.{native,byte}>: package(bytes)
<tests/core/main.{native,byte}>: package(unix)
<tests/core/main.{native,byte}>: use_lwt
<tests/core/main.{native,byte}>: use_lwt-log
<tests/core/main.{native,byte}>: use_lwt-unix
<tests/core/main.{native,byte}>: use_test
<tests/core/*.ml{,i,y}>: package(bigarray)
<tests/core/*.ml{,i,y}>: package(bytes)
<tests/core/*.ml{,i,y}>: package(unix)
<tests/core/*.ml{,i,y}>: use_lwt
<tests/core/*.ml{,i,y}>: use_lwt-log
<tests/core/*.ml{,i,y}>: use_lwt-unix
<tests/core/*.ml{,i,y}>: use_test
# Executable test_unix
<tests/unix/main.{native,byte}>: package(bigarray)
<tests/unix/main.{native,byte}>: package(bytes)
<tests/unix/main.{native,byte}>: package(unix)
<tests/unix/main.{native,byte}>: use_lwt
<tests/unix/main.{native,byte}>: use_lwt-log
<tests/unix/main.{native,byte}>: use_lwt-unix
<tests/unix/main.{native,byte}>: use_test
<tests/unix/*.ml{,i,y}>: package(bigarray)
<tests/unix/*.ml{,i,y}>: package(bytes)
<tests/unix/*.ml{,i,y}>: package(unix)
<tests/unix/*.ml{,i,y}>: use_lwt
<tests/unix/*.ml{,i,y}>: use_lwt-log
<tests/unix/*.ml{,i,y}>: use_lwt-unix
<tests/unix/*.ml{,i,y}>: use_test
# Executable test_react
<tests/react/main.{native,byte}>: package(bigarray)
<tests/react/main.{native,byte}>: package(bytes)
<tests/react/main.{native,byte}>: package(react)
<tests/react/main.{native,byte}>: package(unix)
<tests/react/main.{native,byte}>: use_lwt
<tests/react/main.{native,byte}>: use_lwt-log
<tests/react/main.{native,byte}>: use_lwt-react
<tests/react/main.{native,byte}>: use_lwt-unix
<tests/react/main.{native,byte}>: use_test
<tests/react/*.ml{,i,y}>: package(bigarray)
<tests/react/*.ml{,i,y}>: package(bytes)
<tests/react/*.ml{,i,y}>: package(react)
<tests/react/*.ml{,i,y}>: package(unix)
<tests/react/*.ml{,i,y}>: use_lwt
<tests/react/*.ml{,i,y}>: use_lwt-log
<tests/react/*.ml{,i,y}>: use_lwt-react
<tests/react/*.ml{,i,y}>: use_lwt-unix
<tests/react/*.ml{,i,y}>: use_test
# Executable test_preemptive
<tests/preemptive/main.{native,byte}>: package(bigarray)
<tests/preemptive/main.{native,byte}>: package(bytes)
<tests/preemptive/main.{native,byte}>: package(threads)
<tests/preemptive/main.{native,byte}>: package(unix)
<tests/preemptive/main.{native,byte}>: use_lwt
<tests/preemptive/main.{native,byte}>: use_lwt-log
<tests/preemptive/main.{native,byte}>: use_lwt-preemptive
<tests/preemptive/main.{native,byte}>: use_lwt-unix
<tests/preemptive/main.{native,byte}>: use_test
<tests/preemptive/*.ml{,i,y}>: package(bigarray)
<tests/preemptive/*.ml{,i,y}>: package(bytes)
<tests/preemptive/*.ml{,i,y}>: package(threads)
<tests/preemptive/*.ml{,i,y}>: package(unix)
<tests/preemptive/*.ml{,i,y}>: use_lwt
<tests/preemptive/*.ml{,i,y}>: use_lwt-log
<tests/preemptive/*.ml{,i,y}>: use_lwt-preemptive
<tests/preemptive/*.ml{,i,y}>: use_lwt-unix
<tests/preemptive/*.ml{,i,y}>: use_test
# Executable test_ppx
<tests/ppx/main.{native,byte}>: package(bigarray)
<tests/ppx/main.{native,byte}>: package(bytes)
<tests/ppx/main.{native,byte}>: package(compiler-libs.common)
<tests/ppx/main.{native,byte}>: package(ppx_tools.metaquot)
<tests/ppx/main.{native,byte}>: package(unix)
<tests/ppx/main.{native,byte}>: use_lwt
<tests/ppx/main.{native,byte}>: use_lwt-log
<tests/ppx/main.{native,byte}>: use_lwt-unix
<tests/ppx/main.{native,byte}>: use_test
<tests/ppx/*.ml{,i,y}>: package(bigarray)
<tests/ppx/*.ml{,i,y}>: package(bytes)
<tests/ppx/*.ml{,i,y}>: package(compiler-libs.common)
<tests/ppx/*.ml{,i,y}>: package(ppx_tools.metaquot)
<tests/ppx/*.ml{,i,y}>: package(unix)
<tests/ppx/*.ml{,i,y}>: use_lwt
<tests/ppx/*.ml{,i,y}>: use_lwt-log
<tests/ppx/*.ml{,i,y}>: use_lwt-unix
<tests/ppx/*.ml{,i,y}>: use_test
# OASIS_STOP
